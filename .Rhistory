else {}
relig[i] = religion
}
for (i in 1:nrow(gss))
{
religion <- gss$relig[i]
if (!is.na(religion) && religion != "Protestant" && religion != "Catholic" && religion != "Jewish" && religion != "None")
{
religion <- "Other"
}
else {}
relig[i] = religion
}
summary(relig)
gss_oth <- gss
for (i in 1:nrow(gss))
{
gss_oth$relig[i] = relig[i]
}
2 * pt(25, df = 21)
2 * pt(25, df = 21, lower.tail = FALSE)
load(url(http://s3.amazonaws.com/assets.datacamp.com/course/dasi/inference.Rdata"))
load(url("http://s3.amazonaws.com/assets.datacamp.com/course/dasi/inference.Rdata"))
?inference
??inference
help(inference)
2 * pt(0.5, 17, lower.tail = FALSE)
2 * pt(0.5, 17)
2 * pt(2, 10)
2 * pt(2, 10, lower.tail = FALSE)
2 * pt(0.5, 17, lower.tail = FALSE)
75/40
75/40.13
download.file(url = "http://bit.ly/dasi_project_template", destfile = "dasi_project_template.Rmd")
install.packages("knitr")
library("knitr", lib.loc="d:/Program Files/R/R-3.0.2/library")
load(url("http://bit.ly/dasi_gss_data"))
plot(gss$religion, gss$owngun)
mosaicplot(gss$religion, gss$owngun)
names
names(gss)
names(gss, pat="gun")
names(gss).pat="gun"
ls.str(pat="gun")
ls.str(pat="rel")
ls.str(pat="hel")
ls.str
ls.str()
mosaicplot(table(gss$relig, gss$owngun))
paul = factor(c(rep("yes", 8), rep("no", 8)), levels=("yes", "no"))
paul = factor(c(rep("yes", 8), rep("no", 0)), levels=c("yes", "no"))
paul
pnorm(4.75, 0, 0.0219)
load(url("http://bit.ly/dasi_gss_data"))
summary(gss$relig, gss$owngun)
ls.str()
ls.str(pat="rel")
summary(gss$relig)
summary(gss$owngun)
levels(gss$owngun)
?ls
summary(subset(gss, gss$relig != "Protestant" & gss$relig != "Catholic" & gss$relig != "Jewish" & gss$relig != "None"))
summary(subset(gss$year, gss$relig != "Protestant" & gss$relig != "Catholic" & gss$relig != "Jewish" & gss$relig != "None"))
summary(subset(gss$year, gss$relig == "Other"))
summary(subset(gss$year, gss$relig != "Protestant" & gss$relig != "Catholic" & gss$relig != "Jewish" & gss$relig != "None" & gss$relig != "Other" ))
plot(subset(gss, gss$relig != "Protestant" & gss$relig != "Catholic" & gss$relig != "Jewish" & gss$relig != "None" & gss$relig != "Other" )$relig ~ subset(gss, gss$relig != "Protestant" & gss$relig != "Catholic" & gss$relig != "Jewish" & gss$relig != "None" & gss$relig != "Other" )$relig)
plot(subset(gss, gss$relig != "Protestant" & gss$relig != "Catholic" & gss$relig != "Jewish" & gss$relig != "None" & gss$relig != "Other" )$relig ~ subset(gss, gss$relig != "Protestant" & gss$relig != "Catholic" & gss$relig != "Jewish" & gss$relig != "None" & gss$relig != "Other" )$year)
barplot(subset(gss, gss$relig != "Protestant" & gss$relig != "Catholic" & gss$relig != "Jewish" & gss$relig != "None" & gss$relig != "Other" )$relig ~ subset(gss, gss$relig != "Protestant" & gss$relig != "Catholic" & gss$relig != "Jewish" & gss$relig != "None" & gss$relig != "Other" )$year)
gss_minor <-  subset(gss, gss$relig != "Protestant" & gss$relig != "Catholic" & gss$relig != "Jewish" & gss$relig != "None" & gss$relig != "Other" )
gss_oth <- subset(gss, gss$relig == "Other")
gss_major <- subset(gss, gss$relig == "Protestant" | gss$relig == "Catholic" | gss$relig == "Jewish" | gss$relig == "None" | gss$relig == "Other" )
summary(gss_minor$year)
summary(gss_oth$year)
?barplot
plot(nrow(gss_minor$year) ~ gss_minor$year)
hist(gss_minor$year)
hist(gss_oth$year)
barploot(gss_minor$year, gss_oth$year)
barplot(gss_minor$year, gss_oth$year)
barplot(gss_minor$year ~ gss_oth$year)
plot(x = gss$year, y = nrow(gss_minor))
plot(x = gss$year, y = nrow(gss_oth))
plot(x = gss_oth$year, y = nrow(gss_oth))
hist(gss_minor$year + gss_oth$year)
hist(gss_oth$year)
hist(subset(gss$year, gss$relig != "Protestant" & gss$relig != "Catholic" & gss$relig != "Jewish" & gss$relig != "None" & gss$relig != "Other" ))
hist(subset(gss$year, gss$relig != "Protestant" & gss$relig != "Catholic" & gss$relig != "Jewish" & gss$relig != "None"))
?hist
plot(subset(gss$year, gss$relig != "Protestant" & gss$relig != "Catholic" & gss$relig != "Jewish" & gss$relig != "None") ~ gss$year)
nrow(subset(gss, gss$relig == "Other")) / nrow(gss)
by(gss$year, gss$relig, mean)
by(gss_oth$year, gss_oth$relig, mean)
by(gss_oth$year, gss_oth$relig, summary)
by(gss_oth$year, gss_oth$relig, sum)
by(nrow(gss_oth$year), gss_oth$relig, summary)
by(nrow(gss_oth$relig), gss_oth$year, summary)
by(gss_oth$relig, gss_oth$year, summary)
gss_minor2 <- subset(gss, ! gss$relig %in% ("Protestant", "Catholic", "Jewish", "None", "Other")
gss_minor2 <- subset(gss, ! gss$relig %in% ("Protestant", "Catholic", "Jewish", "None", "Other"))
gss_minor2 <- subset(gss, gss$relig %in% ("Protestant", "Catholic", "Jewish", "None", "Other"))
gss_minor2 <- subset(gss, ! gss$relig %in% c("Protestant", "Catholic", "Jewish", "None", "Other"))
gss_minor <-  subset(gss, gss$relig != "Protestant" & gss$relig != "Catholic" & gss$relig != "Jewish" & gss$relig != "None" & gss$relig != "Other" )
summary(gss_minor$year)
summary(gss_minor2$year)
head(gss_minor2)
head(gss_minor2$relig)
head(gss_minor2$relig, exclude = "NA")
head(gss_minor2$relig, 30)
tail(gss_minor2$relig, 30)
tail(gss_minor$relig, 30)
nrow(gss_minor)
nrow(gss_minor2)
head(gss_minor)
head(gss_minor$relig)
head(gss_minor2$relig)
gss_minor2 <- subset(gss, ! gss$relig %in% c("Protestant", "Catholic", "Jewish", "None", "Other", "NA"))
gss_minor2 <- subset(gss, ! gss$relig %in% c("Protestant", "Catholic", "Jewish", "None", "Other", "NA"))
View(gss_minor2)
gss_prueba <- c(gss$year, gss$relig, gss$owngun)
rm(gss_prueba)
rm(gss_minor2)
gss_prueba <- factor(c(gss$year, gss$relig, gss$owngun), levels = c("year", "relig", "owngun"))
rm(gss_prueba)
gss_prueba <- data.frame(c(gss$year, gss$relig, gss$owngun))
head(gss_prueba)
gss_prueba <- data.frame(gss$year, gss$relig, gss$owngun)
head(gss_prueba)
View(gss_prueba)
summary(gss_prueba)
summary(gss$owngun)
gss_prueba <- data.frame(gss$year, gss$relig, gss$owngun, exclude = "NA")
gss_prueba <- data.frame(gss$year, gss$relig, gss$owngun)
?data.frame
ls.str(gss_prueba)
gss_prueba_NA <- gss_prueba[complete.cases(gss_prueba), ]
summary(gss_prueba_NA)
levels(gss_prueba_NA$relig)
ls.str(gss_prueba_relig)
ls.str(gss_prueba_NA)
ls.str(gss_prueba)
levels(gss_prueba_NA%gss.relig)
levels(gss_prueba_NA$gss.relig)
levels(gss_prueba_NA$gss.relig) <- c("Protestant", "Catholic", "Jewish", "None", "Other", "Other", "Other", "Other", "Other", "Other", "Other", "Other", "Other")
summary(gss_prueba_NA)
load(url("http://bit.ly/dasi_gss_data"))
gss_rg <- data.frame(c(gss$year, gss$relig, gss$owngun))
gss_rg <- gss_rg[complete.cases(gss_prueba), ]
gss_rg <- gss_rg[complete.cases(gss_rg), ]
rm(gss_rg)
gss_rg <- data.frame(c(gss$year, gss$relig, gss$owngun))
gss_rg <- data.frame(gss$year, gss$relig, gss$owngun)
gss_rg <- gss_rg[complete.cases(gss_rg), ]
gss_rg <- data.frame(gss$year, gss$relig, gss$owngun)
gss_rg <- gss_rg[complete.cases(gss_rg), ]
levels(gss_rg$gss.relig) <- c("Protestant", "Catholic", "Jewish", "None", "Other", "Other", "Other", "Other", "Other", "Other", "Other", "Other", "Other")
summary(gss_rg)
head(inference, 10)
inference
load(url("http://s3.amazonaws.com/assets.datacamp.com/course/dasi/inference.Rdata"))
head(inference)
?syntax
?Syntax
summary(gss_rg)
table(gss_rg)
gss_rg <- data.frame(gss$relig, gss$owngun)
gss_rg <- gss_rg[complete.cases(gss_rg), ]
table(gss_rg)
levels(gss_rg$gss.relig) <- c("Protestant", "Catholic", "Jewish", "None", "Other", "Other", "Other", "Other", "Other", "Other", "Other", "Other", "Other")
table(gss_rg)
inference(y = gss_rg$gss.owngun, x = gss_rg$gss.relig, est = "proportion", type = "ht", success = "Yes", null = 0, alternative = "greater", method = "theoretical")
inference(y = gss_rg$gss.owngun, x = gss_rg$gss.relig, est = "proportion", type = "ht", success = "Yes", null = 0, alternative = "greater", method = "theoretical")
library('lattice')
histogram( ~ gss_rg$gss.owngun | gss_rg$gss.relig)
histogram( ~ gss_rg$gss.owngun | gss_rg$gss.relig, xlab = "gun possesion per religion")
histogram( ~ gss_rg$gss.owngun | gss_rg$gss.relig, xlab = "gun possesion per religion")
head(inference)
head(inference, 10)
levels(gss_rg$gss.owngun)
table(gss_rg)
gss_rg <- subset(gss_rg, gss_rg$gss.owngun != "Refused")
table(gss_rg)
levels(gss_rg$gss.owngun) <- c("Yes", "No", "No")
table(gss_rg)
library("BHH2", lib.loc="d:/Program Files/R/R-3.0.2/library")
install.packages(c("boot", "class", "cluster", "evaluate", "foreign", "KernSmooth", "lattice", "markdown", "MASS", "Matrix", "mgcv", "nlme", "nnet", "rpart", "spatial", "survival"))
load(url("http://bit.ly/dasi_gss_data"))
gss_rg <- data.frame(gss$relig, gss$owngun)
gss_rg <- gss_rg[complete.cases(gss_rg), ]
gss_rg <- subset(gss_rg, gss_rg$gss.owngun != "Refused")
levels(gss_rg$gss.relig) <- c("Protestant", "Catholic", "Jewish", "None", "Other", "Other", "Other", "Other", "Other", "Other", "Other", "Other", "Other")
levels(gss_rg$gss.owngun) <- c("Yes", "No", "No")
summary(gss_rg)
nrow(gss_rg)
mosaicplot(gss_rg$gss.owngun, gss_rg$gss.relig, xlab = "gun possesion per religion")
mosaicplot(table(gss_rg$gss.relig, gss_rg$gss.owngun), xlab = "gun possesion per religion")
mosaicplot(table(gss_rg$gss.relig, gss_rg$gss.owngun), xlab = "religion", ylab = "gun possession", title = FALSE)
table(gss$natcrime, gss$owngun)
mosaicplot(gss$natcrime, gss$owngun)
mosaicplot(table(gss$natcrime, gss$owngun))
mosaicplot(table(gss$natcrime, gss$owngun), xlab = "halting rising crime rate", ylab = "gun possession")
?mosaiplt
?mosaicplot
mosaicplot(table(gss$natcrime, gss$owngun), xlab = "halting rising crime rate", ylab = "gun possession", main = FALSE)
mosaicplot(table(gss$natcrime, gss$owngun), xlab = "halting rising crime rate", ylab = "gun possession", main = NA)
mosaicplot(table(gss$natcrime, gss$owngun), xlab = "halting rising crime rate", ylab = "gun possession", main = NA, color = TRUE)
mosaicplot(table(gss$natcrime, gss$owngun), xlab = "halting rising crime rate", ylab = "gun possession", main = NA, color = 2:3)
mosaicplot(table(gss$natcrime, gss$owngun), xlab = "halting rising crime rate", ylab = "gun possession", main = NA, color = rainbow(12))
mosaicplot(table(gss$natcrime, gss$owngun), xlab = "halting rising crime rate", ylab = "gun possession", main = NA, color = terrain.colors(12))
mosaicplot(table(gss$natcrime, gss$owngun), xlab = "halting rising crime rate", ylab = "gun possession", main = NA, color = terrain.colors(12,3))
mosaicplot(table(gss$natcrime, gss$owngun), xlab = "halting rising crime rate", ylab = "gun possession", main = NA, color = terrain.colors(1))
mosaicplot(table(gss$natcrime, gss$owngun), xlab = "halting rising crime rate", ylab = "gun possession", main = NA, color = terrain.colors(12:34))
mosaicplot(table(gss$natcrime, gss$owngun), xlab = "halting rising crime rate", ylab = "gun possession", main = NA, color = terrain.colors(12:500))
mosaicplot(table(gss$natcrime, gss$owngun), xlab = "halting rising crime rate", ylab = "gun possession", main = NA, color = terrain.colors(500))
mosaicplot(table(gss$natcrime, gss$owngun), xlab = "halting rising crime rate", ylab = "gun possession", main = NA, color = c(terrain.colors(2), heat.colors(4)))
mosaicplot(table(gss$natcrime, gss$owngun), xlab = "halting rising crime rate", ylab = "gun possession", main = NA, color = c(darkgoldenrod2, darkgoldenrod3, darkgoldenrod4))
mosaicplot(table(gss$natcrime, gss$owngun), xlab = "halting rising crime rate", ylab = "gun possession", main = NA, color = c("darkgoldenrod2", "darkgoldenrod3", "darkgoldenrod4"))
system("RMDFILE=Projectv2")
system("Rscript -e 'require(knitr);
require(markdown);
knit('$RMDFILE.rmd', '$RMDFILE.md');
markdownToHTML('$RMDFILE.md', '$RMDFILE.html',
options=c(\"use_xhml\"))'")
require(knitr)
require(markdown)
knit("Projectv2.Rmd")
knit("D:\Juan Jose\Dropbox\Estudios trabajo\Data Analysis and Statistical Inference\Projectv2.Rmd")
knit("D:/Juan Jose/Dropbox/Estudios trabajo/Data Analysis and Statistical Inference/Projectv2.Rmd")
markdownToHTML('Projectv2.md','Projectv2.html', options=c("use_xhml"))
system("pandoc -s Projectv2.html -o Projectv2.pdf")
markdownToHTML('D:/Juan Jose/Dropbox/Estudios trabajo/Data Analysis and Statistical Inference/Projectv2.md','D:/Juan Jose/Dropbox/Estudios trabajo/Data Analysis and Statistical Inference/Projectv2.html', options=c("use_xhml"))
system("RMDFILE=Projectv2")
system("Rscript -e 'require(knitr);
require(markdown);
knit('$RMDFILE.rmd', '$RMDFILE.md');
markdownToHTML('$RMDFILE.md', '$RMDFILE.html',
options=c(\"use_xhml\"))'")
require(knitr)
require(markdown)
knit("Projectv2.Rmd")
markdownToHTML('Projectv2.md','Projectv2.html', options=c("use_xhml"))
markdownToHTML("Projectv2.md","Projectv2.html", options=c("use_xhml"))
markdownToHTML("Projectv2.md","Projectv2.html", options=c("use_xhml"))
system("pandoc -s Projectv2.html -o Projectv2.pdf")
system("pandoc -s Projectv2.html -o Projectv2.pdf")
find.package("devtools"")
find.package("devtools")
install.packages("devtools")
library(devtools)
find_rtools()
getwd
getwd()
library("markdown", lib.loc="d:/Program Files/R/R-3.1.0/library")
View(gss)
library("KernSmooth", lib.loc="d:/Program Files/R/R-3.1.0/library")
library(datasets)
data(mtcars)
with(mtcars, tapply(mpg, cyl, mean))
with(mtcars, tapply(hp, cyl, mean))
a <- with(mtcars, tapply(hp, cyl, mean))
a[3]- a[1]
tapply(mtcars$mpg, mtcars$cyl, mean)
set.seed(1)
rpois(5, 2)
?rnormal
?rnorm
?pois
?rpois
?rexp
?rbinom
?text
0.5-0.5^2
0.5*(1-0.5)
x <- 1:4
p <- x/sum(x)
temp <- rbind(x, p)
rownames(temp) <- c("X", "Prob")
temp
mean(temp)
sum(temp$X * temp$Prob)
str(temp)
clas(temp)
class(temp)
temp
pnorm(70, 80, 100)
pnorm(70, 80, 10)
?pnorm
qnorm(0.95, 1100, 75)
?qnorm
qnorm(0.95, 1100, 7.5)
choose(5,4)
5*(0.5^5)+(.5^5)
?pbinom
pbinom(4,5,0.5) + pbinom(5,5,0.5)
1 - pbinom(4,5,0.5)
pbinom(5,5,0.5)
pbinom(4,5,0.5)
0.5^5
pbinom(3.9,5,0.5)
1 - pbinom(3.9,5,0.5)
pt(16, 15, 1)
pt(14, 15, 1)
qt(14, 15, 1)
?qt
qt(14, 1)
dt(1:100, 99)
pt(1, 99)
1-0.84
qt(99,99)
qt(0.95,99)
qt(0.90,99)
qt(0.80,99)
qt(0.86,99)
qt(0.85,99)
qt(0.84,99)
1/sqrt(12)
sqrt(1000)
0.28/31
sqrt(1/12)/sqrt(1000)
sqrt(1/12)/sqrt(100)
ppois(10, 0.5*5)
ppois(10, 5*5)
ppois(10, 5*3)
choose(9,3)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y ~ x)
summary(fit)
library(mtcars)
data(mtcars)
rm mtcars
load(mtcars)
data(mtcars)
summary(mtcars)
fit <- lm(mpg ~ wt, data = mtcars)
summary(fit)
plot(fit)
sumCoef <- summary(fit)$coefficients
sumCoef[1,1] + c(-1, 1) * qt(.975, df = fit$df) * sumCoef[1, 2]
sumCoef
mean(wt)
mean(wt, data = mtcars)
mean(mtcars$wt)
sumCoef[1,1]+sumCoef[1,2] * mean(mtcars$wt)
mean(mtcars$mpg)
plot(mpg ~ wt, data = mtcars)
abline(mean(mtcars$wt), 0)
abline(c(mean(mtcars$wt), 0))
abline(fit)
points(mean(mtcars$wt), mean(mtcars$mpg))
points(mean(mtcars$wt), mean(mtcars$mpg), col = red)
points(mean(mtcars$wt), mean(mtcars$mpg), col = "red")
points(mean(mtcars$wt), (sumCoef[1,1]+sumCoef[1,2] * mean(mtcars$wt)) - 1.96 * 1.8776 * sqrt(1/length(mtcars)) , col = "blue")
sumCoef[1,1]+sumCoef[1,2] * mean(mtcars$wt)) - 1.96 * 1.8776 * sqrt(1/length(mtcars))
sumCoef[1,1] + sumCoef[1,2] * mean(mtcars$wt)) - 1.96 * 1.8776 * sqrt(1/length(mtcars))
(sumCoef[1,1] + sumCoef[1,2] * mean(mtcars$wt)) - 1.96 * 1.8776 * sqrt(1/length(mtcars))
data(mtcars)
y <- mtcars$mpg
x <- mtcars$wt
model <- lm(y~x)
resids <- summary(model)$residuals
sigma2 <- (1/(length(y)-2))*sum(resids^2)
sigma <- sqrt(sigma2)
interval <- qt(0.975,length(y)-2)*sigma*sqrt(1+1/length(y))
lowerEnd <- mean(y)-interval
newdata <- data.frame(x = mean(x))
p2 <- predict(model,newdata,interval = ("confidence"))
p2
help(mtcars)
x <- mtcars$wt/2
model <- lm(y~x)
> resids <- summary(model)$residuals
> sigma2 <- (1/(length(y)-2))*sum(resids^2)
> sigma <- sqrt(sigma2)
> interval <- qt(0.975,length(y)-2)*sigma*sqrt(1+1/length(y))
> lowerEnd <- mean(y)-interval
> newdata <- data.frame(x = mean(x))
> p2 <- predict(model,newdata,interval = ("confidence"))
data(mtcars)
y <- mtcars$mpg
x <- mtcars$wt/2
model <- lm(y~x)
resids <- summary(model)$residuals
sigma2 <- (1/(length(y)-2))*sum(resids^2)
sigma <- sqrt(sigma2)
interval <- qt(0.975,length(y)-2)*sigma*sqrt(1+1/length(y))
lowerEnd <- mean(y)-interval
newdata <- data.frame(x = mean(x))
p2 <- predict(model,newdata,interval = ("confidence"))
p2
z <-
mtcars$wt
data(mtcars)
y <- mtcars$mpg
x <- mtcars$wt/2
model <- lm(y~x)
resids <- summary(model)$residuals
sigma2 <- (1/(length(y)-2))*sum(resids^2)
sigma <- sqrt(sigma2)
interval <- qt(0.975,length(y)-2)*sigma*sqrt(1+1/length(y))
lowerEnd <- mean(y)-interval
newdata <- data.frame(x = mean(x))
p2 <- predict(model,newdata,interval = ("prediction"))
p2
data(mtcars)
y <- mtcars$mpg
x <- mtcars$wt
model <- lm(y~x)
resids <- summary(model)$residuals
sigma2 <- (1/(length(y)-2))*sum(resids^2)
sigma <- sqrt(sigma2)
interval <- qt(0.975,length(y)-2)*sigma*sqrt(1+1/length(y))
lowerEnd <- mean(y)-interval
newdata <- data.frame(x = 3000)
p2 <- predict(model,newdata,interval = ("prediction"))
p2
data(mtcars)
y <- mtcars$mpg
x <- mtcars$wt
model <- lm(y~x)
resids <- summary(model)$residuals
sigma2 <- (1/(length(y)-2))*sum(resids^2)
sigma <- sqrt(sigma2)
interval <- qt(0.975,length(y)-2)*sigma*sqrt(1+1/length(y))
lowerEnd <- mean(y)-interval
newdata <- data.frame(x = 3)
p2 <- predict(model,newdata,interval = ("prediction"))
p2
data(mtcars)
y <- mtcars$mpg
x <- mtcars$wt/2
model <- lm(y~x)
resids <- summary(model)$residuals
sigma2 <- (1/(length(y)-2))*sum(resids^2)
sigma <- sqrt(sigma2)
interval <- qt(0.975,length(y)-2)*sigma*sqrt(1+1/length(y))
lowerEnd <- mean(y)-interval
newdata <- data.frame(x = mean(x))
p2 <- predict(model,newdata,interval = ("confidence"))
p2
summary(fit)
fit <- lm(mpg ~ wt/2, data = mtcars)
x <- mtcars$wt / 2
fit <- lm(mpg ~ x, data = mtcars)
summary(fit)
fit <- lm(mpg ~ wt, data = mtcars)
summary(fit)
x <- mtcars$wt * 2
fit <- lm(mpg ~ x, data = mtcars)
summary(fit)
summary(fit)
fit <- lm(mpg ~ wt, data = mtcars)
summary(fit)
-5.3445*2
data(mtcars)
fit <- lm(mpg ~ wt, data = mtcars)
summary(fit)
predict(fit, data.frame(x = mean(wt)), interval = "predict")
predict(fit, data.frame(x = mean(wt)), interval = "confidence")
predict(fit, data.frame(x = mean(mtcars$wt)), interval = "confidence")
data(mtcars)
y <- mtcars$mpg
x <- mtcars$wt
model <- lm(y~x)
resids <- summary(model)$residuals
sigma2 <- (1/(length(y)-2))*sum(resids^2)
sigma <- sqrt(sigma2)
interval <- qt(0.975,length(y)-2)*sigma*sqrt(1+1/length(y))
lowerEnd <- mean(y)-interval
newdata <- data.frame(x = mean(y))
p2 <- predict(model,newdata,interval = ("confidence"))
p2
newdata <- data.frame(x = model$coeficients[1,2])
p2 <- predict(model,newdata,interval = ("confidence"))
p2
data(mtcars)
y <- mtcars$mpg
x <- mtcars$wt
model <- lm(y~x)
summary(model)
residuals(model)
sum(residuals(model)^2)
model2 <- lm(y ~ 1)
sum(residuals(model2)^2)
sum(residuals(model2)^2)/sum(residuals(model)^2)
sum(residuals(model)^2)/sum(residuals(model2)^2)
library(plyr)
data_ful <- data
impute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
data <- read.csv("activity.csv")
summary(data)
data$date <- as.Date(data$date, format = "%Y-%m-%d")
setwd("d:/Juan Jose/Documents/GitHub/courses/05_ReproducibleResearch/Assigment1/RepData_PeerAssessment1")
data <- read.csv("activity.csv")
summary(data)
data$date <- as.Date(data$date, format = "%Y-%m-%d")
library(plyr)
data_full <- data
impute.mean <- function(x) replace(x, is.na(x), mean(x, na.rm = TRUE))
head(data)
ddply(data_full, ~ interval, transform, steps = impute.mean(steps))
head(data_full)
data_full <- ddply(data_full, ~ interval, transform, steps = impute.mean(steps))
head(data_full)
data_full <- ddply(data, .interval, transform, steps = impute.mean(steps))
data_full <- ddply(data, interval, transform, steps = impute.mean(steps))
data_full <- ddply(data, data$interval, transform, steps = impute.mean(steps))
data_full <- ddply(data, ~ interval, transform, steps = impute.mean(steps))
data <- data[data$interval in c(0,5,1200,1250), ]
data <- data[data$interval %in% c(0,5,1200,1250), ]
head(data)
data_full <- ddply(data, ~ interval, transform, steps = impute.mean(steps))
head(data_full)
